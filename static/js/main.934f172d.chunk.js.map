{"version":3,"sources":["component/MainPage.js","component/Grid.js","util/constant.js","util/randInt.js","util/randBool.js","component/TestOneResult.js","component/TestOneGrid.js","component/TestOneDisplay.js","component/TestOneDisplay2.js","component/Grid2.js","component/TestOneGrid2.js","component/TestOneDisplay3.js","component/TestOneDisplay4.js","component/TestTwoKeyMap.js","component/TestTwoKeyQuery.js","component/TestTwoDisplay.js","util/shuffle.js","App.js","index.js"],"names":["MainPage","href","Grid","arr","useState","convertedArr","push","className","GRID_DISPLAY_TIME","GRID_DISPLAY_TIME2","CROSS_DISPLAY_TIME","randInt","min","max","Math","ceil","floor","random","randBool","round","TestOneResult","p","firstArr","secondArr","userReply","setDisplayResult","setMakeArr","retryButtonRef","React","useRef","handleKeyDown","event","console","log","keyCode","current","click","ans","i","useEffect","window","addEventListener","removeEventListener","onClick","ref","TestOneGrid","TestOneDisplay","setUserReply","setFirstArr","setSecondArr","displayResult","makeArr","yesButtonRef","noButtonRef","x","y","yes","x_black_idx","yLength","length","pop","slice","gsap","timeline","set","opacity","TestTwoKeyMap","name","src","TestTwoKeyQuery","imgArr","ansArr","inputArr","init_flag","color","TestTwoDisplay","mapArr","setMapArr","setImgArr","setInputArr","setAnsArr","Array","setConvArr","inputIdx","setInputIdx","flag","setFlag","copyInputArr","mapArrTemp","imgArrTemp","ansArrTemp","inputArrTemp","array","j","shuffle","convArrTemp","key","App","exact","path","component","TestOneDisplay2","TestOneDisplay3","TestOneDisplay4","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.934f172d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MainPage = () => {\n  return (\n    <div>\n      <a href=\"/TestOneDisplay\">첫번째</a>\n      <a href=\"/TestTwoDisplay\">두번째</a>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import { React, useState, useEffect } from \"react\";\nimport \"../scss/Grid.scss\";\n\nconst Grid = ({ arr }) => {\n  let [convertedArr, setConvertedArr] = useState([]);\n  for (let black of arr) {\n    if (black) {\n      convertedArr.push(<div className=\"box box-black\"></div>);\n    } else {\n      convertedArr.push(<div className=\"box box-white\"></div>);\n    }\n  }\n\n  return <div className=\"box-wrapper\">{convertedArr}</div>;\n};\n\nexport default Grid;\n","export const GRID_DISPLAY_TIME = 0.3;\nexport const GRID_DELAY_TIME = 0.3;\n\nexport const GRID_DISPLAY_TIME2 = 0.5;\nexport const GRID_DELAY_TIME2 = 0.5;\n\nexport const CROSS_DISPLAY_TIME = 0.5;\n","export default function randInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","export default function randBool() {\n  return Math.round(Math.random()) === 0;\n}\n","import React from \"react\";\nimport Grid from \"./Grid\";\nimport \"../scss/TestOneResult.scss\";\n\nconst TestOneResult = ({\n  firstArr,\n  secondArr,\n  userReply,\n  setDisplayResult,\n  setMakeArr,\n}) => {\n  let retryButtonRef = React.useRef(null);\n  const handleKeyDown = (event) => {\n    console.log(\"A key was pressed\", event.keyCode);\n    if (event.keyCode === 38) {\n      retryButtonRef.current.click();\n    }\n  };\n  let ans = true;\n\n  for (let i = 0; i < 16; i++) {\n    if (secondArr[i] && !firstArr[i]) {\n      ans = false;\n    }\n  }\n\n  let p;\n\n  if (ans === userReply) {\n    p = <p className=\"green\">맞았습니다!</p>;\n  } else {\n    p = <p className=\"red\">틀렸습니다.</p>;\n  }\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  return (\n    <div className=\"result-wrapper\">\n      <div>\n        <Grid arr={firstArr} />\n        <span>↔</span>\n        <Grid arr={secondArr} />\n        <br />\n        {p}\n        <button\n          onClick={() => {\n            setMakeArr(true);\n            setDisplayResult(false);\n          }}\n          className=\"result-button\"\n          ref={retryButtonRef}\n        >\n          재시도↑\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TestOneResult;\n","import React from \"react\";\nimport Grid from \"./Grid\";\nimport \"../scss/TestOneGrid.scss\";\n\nconst TestOneGrid = ({ firstArr, secondArr }) => {\n  return (\n    <div>\n      <div className=\"grid-wrapper grid-wrapper-first\">\n        <Grid arr={firstArr} />\n      </div>\n\n      <div className=\"grid-wrapper grid-wrapper-second\">\n        <Grid arr={secondArr} />\n      </div>\n    </div>\n  );\n};\n\nexport default TestOneGrid;\n","import React from \"react\";\nimport Grid from \"./Grid\";\nimport gsap from \"gsap\";\nimport {\n  GRID_DISPLAY_TIME,\n  GRID_DELAY_TIME,\n  CROSS_DISPLAY_TIME,\n} from \"../util/constant\";\nimport randInt from \"../util/randInt\";\nimport randBool from \"../util/randBool\";\nimport TestOneResult from \"./TestOneResult\";\nimport TestOneGrid from \"./TestOneGrid\";\nimport \"../scss/TestOneDisplay.scss\";\n\nconst TestOneDisplay = () => {\n  let [userReply, setUserReply] = React.useState(false);\n  let [firstArr, setFirstArr] = React.useState([]);\n  let [secondArr, setSecondArr] = React.useState([]);\n  let [displayResult, setDisplayResult] = React.useState(false);\n  let [makeArr, setMakeArr] = React.useState(true);\n\n  let yesButtonRef = React.useRef(null);\n  let noButtonRef = React.useRef(null);\n\n  const handleKeyDown = (event) => {\n    console.log(\"A key was pressed\", event.keyCode);\n    if (event.keyCode === 37) {\n      yesButtonRef.current.click();\n    } else if (event.keyCode === 39) {\n      noButtonRef.current.click();\n    }\n  };\n\n  if (makeArr) {\n    let x = [],\n      y = [];\n    let yes = randBool();\n\n    let x_black_idx = [];\n    for (let i = 0; i < 16; i++) {\n      x.push(randBool());\n      y.push(0);\n      if (x[i]) {\n        x_black_idx.push(i);\n      }\n    }\n\n    console.log(yes ? \"yes\" : \"no\");\n    if (!yes) {\n      for (let i = 0; i < 10; i++) {\n        x_black_idx.push(randInt(0, 15));\n      }\n    }\n\n    let yLength = randInt(3, 5);\n    console.log(yLength);\n\n    while (x_black_idx.length > yLength) {\n      if (randBool()) {\n        x_black_idx.pop();\n      } else {\n        x_black_idx = [\n          x_black_idx[x_black_idx.length - 1],\n          ...x_black_idx.slice(0, -1),\n        ];\n      }\n    }\n\n    for (let idx of x_black_idx) y[idx] = true;\n\n    setFirstArr(x);\n    setSecondArr(y);\n    setMakeArr(false);\n  }\n\n  React.useEffect(() => {\n    if (displayResult) {\n      return;\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    let tl = gsap.timeline();\n\n    tl.set(\".cross-wrapper\", {\n      opacity: 1,\n    })\n      .set(\n        \".cross-wrapper\",\n        {\n          opacity: 0,\n        },\n        `+=${CROSS_DISPLAY_TIME}`\n      )\n      .set(\".grid-wrapper-first\", {\n        opacity: 1,\n      })\n      .set(\n        \".grid-wrapper-first\",\n        {\n          opacity: 0,\n        },\n        `+=${GRID_DISPLAY_TIME}`\n      )\n      .set(\n        \".grid-wrapper-second\",\n        {\n          opacity: 1,\n        },\n        `+=${GRID_DELAY_TIME}`\n      )\n      .set(\n        \".grid-wrapper-second\",\n        {\n          opacity: 0,\n        },\n        `+=${GRID_DISPLAY_TIME}`\n      )\n      .set(\".button-wrapper\", {\n        opacity: 1,\n      });\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [displayResult]);\n\n  return displayResult ? (\n    <TestOneResult\n      firstArr={firstArr}\n      secondArr={secondArr}\n      userReply={userReply}\n      setDisplayResult={setDisplayResult}\n      setMakeArr={setMakeArr}\n    />\n  ) : (\n    <div>\n      <div className=\"cross-wrapper\">\n        <div className=\"cross\"> </div>\n      </div>\n\n      <TestOneGrid firstArr={firstArr} secondArr={secondArr} />\n\n      <div className=\"button-wrapper\">\n        <button\n          className=\"button button-yes\"\n          onClick={() => {\n            setUserReply(true);\n            setDisplayResult(true);\n          }}\n          ref={yesButtonRef}\n        >\n          YES\n          <br />←\n        </button>\n        <button\n          className=\"button button-no\"\n          onClick={() => {\n            setUserReply(false);\n            setDisplayResult(true);\n          }}\n          ref={noButtonRef}\n        >\n          NO\n          <br />→\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TestOneDisplay;\n","import React from \"react\";\nimport Grid from \"./Grid\";\nimport gsap from \"gsap\";\nimport {\n  GRID_DISPLAY_TIME2,\n  GRID_DELAY_TIME2,\n  CROSS_DISPLAY_TIME,\n} from \"../util/constant\";\nimport randInt from \"../util/randInt\";\nimport randBool from \"../util/randBool\";\nimport TestOneResult from \"./TestOneResult\";\nimport TestOneGrid from \"./TestOneGrid\";\nimport \"../scss/TestOneDisplay.scss\";\n\nconst TestOneDisplay = () => {\n  let [userReply, setUserReply] = React.useState(false);\n  let [firstArr, setFirstArr] = React.useState([]);\n  let [secondArr, setSecondArr] = React.useState([]);\n  let [displayResult, setDisplayResult] = React.useState(false);\n  let [makeArr, setMakeArr] = React.useState(true);\n\n  let yesButtonRef = React.useRef(null);\n  let noButtonRef = React.useRef(null);\n\n  const handleKeyDown = (event) => {\n    console.log(\"A key was pressed\", event.keyCode);\n    if (event.keyCode === 37) {\n      yesButtonRef.current.click();\n    } else if (event.keyCode === 39) {\n      noButtonRef.current.click();\n    }\n  };\n\n  if (makeArr) {\n    let x = [],\n      y = [];\n    let yes = randBool();\n\n    let x_black_idx = [];\n    for (let i = 0; i < 16; i++) {\n      x.push(randBool());\n      y.push(0);\n      if (x[i]) {\n        x_black_idx.push(i);\n      }\n    }\n\n    console.log(yes ? \"yes\" : \"no\");\n    if (!yes) {\n      for (let i = 0; i < 10; i++) {\n        x_black_idx.push(randInt(0, 15));\n      }\n    }\n\n    let yLength = randInt(3, 5);\n    console.log(yLength);\n\n    while (x_black_idx.length > yLength) {\n      if (randBool()) {\n        x_black_idx.pop();\n      } else {\n        x_black_idx = [\n          x_black_idx[x_black_idx.length - 1],\n          ...x_black_idx.slice(0, -1),\n        ];\n      }\n    }\n\n    for (let idx of x_black_idx) y[idx] = true;\n\n    setFirstArr(x);\n    setSecondArr(y);\n    setMakeArr(false);\n  }\n\n  React.useEffect(() => {\n    if (displayResult) {\n      return;\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    let tl = gsap.timeline();\n\n    tl.set(\".cross-wrapper\", {\n      opacity: 1,\n    })\n      .set(\n        \".cross-wrapper\",\n        {\n          opacity: 0,\n        },\n        `+=${CROSS_DISPLAY_TIME}`\n      )\n      .set(\".grid-wrapper-first\", {\n        opacity: 1,\n      })\n      .set(\n        \".grid-wrapper-first\",\n        {\n          opacity: 0,\n        },\n        `+=${GRID_DISPLAY_TIME2}`\n      )\n      .set(\n        \".grid-wrapper-second\",\n        {\n          opacity: 1,\n        },\n        `+=${GRID_DELAY_TIME2}`\n      )\n      .set(\n        \".grid-wrapper-second\",\n        {\n          opacity: 0,\n        },\n        `+=${GRID_DISPLAY_TIME2}`\n      )\n      .set(\".button-wrapper\", {\n        opacity: 1,\n      });\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [displayResult]);\n\n  return displayResult ? (\n    <TestOneResult\n      firstArr={firstArr}\n      secondArr={secondArr}\n      userReply={userReply}\n      setDisplayResult={setDisplayResult}\n      setMakeArr={setMakeArr}\n    />\n  ) : (\n    <div>\n      <div className=\"cross-wrapper\">\n        <div className=\"cross\"> </div>\n      </div>\n\n      <TestOneGrid firstArr={firstArr} secondArr={secondArr} />\n\n      <div className=\"button-wrapper\">\n        <button\n          className=\"button button-yes\"\n          onClick={() => {\n            setUserReply(true);\n            setDisplayResult(true);\n          }}\n          ref={yesButtonRef}\n        >\n          YES\n          <br />←\n        </button>\n        <button\n          className=\"button button-no\"\n          onClick={() => {\n            setUserReply(false);\n            setDisplayResult(true);\n          }}\n          ref={noButtonRef}\n        >\n          NO\n          <br />→\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TestOneDisplay;\n","import { React, useState, useEffect } from \"react\";\nimport \"../scss/Grid2.scss\";\n\nconst Grid = ({ arr }) => {\n  let [convertedArr, setConvertedArr] = useState([]);\n  for (let black of arr) {\n    if (black) {\n      convertedArr.push(<div className=\"box box-black\"></div>);\n    } else {\n      convertedArr.push(<div className=\"box box-white\"></div>);\n    }\n  }\n\n  return <div className=\"box-wrapper\">{convertedArr}</div>;\n};\n\nexport default Grid;\n","import React from \"react\";\nimport Grid from \"./Grid2\";\nimport \"../scss/TestOneGrid2.scss\";\n\nconst TestOneGrid = ({ firstArr, secondArr }) => {\n  return (\n    <div>\n      <div className=\"grid-wrapper grid-wrapper-first\">\n        <Grid arr={firstArr} />\n      </div>\n\n      <div className=\"grid-wrapper grid-wrapper-second\">\n        <Grid arr={secondArr} />\n      </div>\n    </div>\n  );\n};\n\nexport default TestOneGrid;\n","import React from \"react\";\nimport Grid from \"./Grid\";\nimport gsap from \"gsap\";\nimport {\n  GRID_DISPLAY_TIME,\n  GRID_DELAY_TIME,\n  CROSS_DISPLAY_TIME,\n} from \"../util/constant\";\nimport randInt from \"../util/randInt\";\nimport randBool from \"../util/randBool\";\nimport TestOneResult from \"./TestOneResult\";\nimport TestOneGrid from \"./TestOneGrid2\";\nimport \"../scss/TestOneDisplay.scss\";\n\nconst TestOneDisplay = () => {\n  let [userReply, setUserReply] = React.useState(false);\n  let [firstArr, setFirstArr] = React.useState([]);\n  let [secondArr, setSecondArr] = React.useState([]);\n  let [displayResult, setDisplayResult] = React.useState(false);\n  let [makeArr, setMakeArr] = React.useState(true);\n\n  let yesButtonRef = React.useRef(null);\n  let noButtonRef = React.useRef(null);\n\n  const handleKeyDown = (event) => {\n    console.log(\"A key was pressed\", event.keyCode);\n    if (event.keyCode === 37) {\n      yesButtonRef.current.click();\n    } else if (event.keyCode === 39) {\n      noButtonRef.current.click();\n    }\n  };\n\n  if (makeArr) {\n    let x = [],\n      y = [];\n    let yes = randBool();\n\n    let x_black_idx = [];\n    for (let i = 0; i < 16; i++) {\n      x.push(randBool());\n      y.push(0);\n      if (x[i]) {\n        x_black_idx.push(i);\n      }\n    }\n\n    console.log(yes ? \"yes\" : \"no\");\n    if (!yes) {\n      for (let i = 0; i < 10; i++) {\n        x_black_idx.push(randInt(0, 15));\n      }\n    }\n\n    let yLength = randInt(3, 5);\n    console.log(yLength);\n\n    while (x_black_idx.length > yLength) {\n      if (randBool()) {\n        x_black_idx.pop();\n      } else {\n        x_black_idx = [\n          x_black_idx[x_black_idx.length - 1],\n          ...x_black_idx.slice(0, -1),\n        ];\n      }\n    }\n\n    for (let idx of x_black_idx) y[idx] = true;\n\n    setFirstArr(x);\n    setSecondArr(y);\n    setMakeArr(false);\n  }\n\n  React.useEffect(() => {\n    if (displayResult) {\n      return;\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    let tl = gsap.timeline();\n\n    tl.set(\".cross-wrapper\", {\n      opacity: 1,\n    })\n      .set(\n        \".cross-wrapper\",\n        {\n          opacity: 0,\n        },\n        `+=${CROSS_DISPLAY_TIME}`\n      )\n      .set(\".grid-wrapper-first\", {\n        opacity: 1,\n      })\n      .set(\n        \".grid-wrapper-first\",\n        {\n          opacity: 0,\n        },\n        `+=${GRID_DISPLAY_TIME}`\n      )\n      .set(\n        \".grid-wrapper-second\",\n        {\n          opacity: 1,\n        },\n        `+=${GRID_DELAY_TIME}`\n      )\n      .set(\n        \".grid-wrapper-second\",\n        {\n          opacity: 0,\n        },\n        `+=${GRID_DISPLAY_TIME}`\n      )\n      .set(\".button-wrapper\", {\n        opacity: 1,\n      });\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [displayResult]);\n\n  return displayResult ? (\n    <TestOneResult\n      firstArr={firstArr}\n      secondArr={secondArr}\n      userReply={userReply}\n      setDisplayResult={setDisplayResult}\n      setMakeArr={setMakeArr}\n    />\n  ) : (\n    <div>\n      <div className=\"cross-wrapper\">\n        <div className=\"cross\"> </div>\n      </div>\n\n      <TestOneGrid firstArr={firstArr} secondArr={secondArr} />\n\n      <div className=\"button-wrapper\">\n        <button\n          className=\"button button-yes\"\n          onClick={() => {\n            setUserReply(true);\n            setDisplayResult(true);\n          }}\n          ref={yesButtonRef}\n        >\n          YES\n          <br />←\n        </button>\n        <button\n          className=\"button button-no\"\n          onClick={() => {\n            setUserReply(false);\n            setDisplayResult(true);\n          }}\n          ref={noButtonRef}\n        >\n          NO\n          <br />→\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TestOneDisplay;\n","import React from \"react\";\nimport Grid from \"./Grid\";\nimport gsap from \"gsap\";\nimport {\n  GRID_DISPLAY_TIME2,\n  GRID_DELAY_TIME2,\n  CROSS_DISPLAY_TIME,\n} from \"../util/constant\";\nimport randInt from \"../util/randInt\";\nimport randBool from \"../util/randBool\";\nimport TestOneResult from \"./TestOneResult\";\nimport TestOneGrid from \"./TestOneGrid2\";\nimport \"../scss/TestOneDisplay.scss\";\n\nconst TestOneDisplay = () => {\n  let [userReply, setUserReply] = React.useState(false);\n  let [firstArr, setFirstArr] = React.useState([]);\n  let [secondArr, setSecondArr] = React.useState([]);\n  let [displayResult, setDisplayResult] = React.useState(false);\n  let [makeArr, setMakeArr] = React.useState(true);\n\n  let yesButtonRef = React.useRef(null);\n  let noButtonRef = React.useRef(null);\n\n  const handleKeyDown = (event) => {\n    console.log(\"A key was pressed\", event.keyCode);\n    if (event.keyCode === 37) {\n      yesButtonRef.current.click();\n    } else if (event.keyCode === 39) {\n      noButtonRef.current.click();\n    }\n  };\n\n  if (makeArr) {\n    let x = [],\n      y = [];\n    let yes = randBool();\n\n    let x_black_idx = [];\n    for (let i = 0; i < 16; i++) {\n      x.push(randBool());\n      y.push(0);\n      if (x[i]) {\n        x_black_idx.push(i);\n      }\n    }\n\n    console.log(yes ? \"yes\" : \"no\");\n    if (!yes) {\n      for (let i = 0; i < 10; i++) {\n        x_black_idx.push(randInt(0, 15));\n      }\n    }\n\n    let yLength = randInt(3, 5);\n    console.log(yLength);\n\n    while (x_black_idx.length > yLength) {\n      if (randBool()) {\n        x_black_idx.pop();\n      } else {\n        x_black_idx = [\n          x_black_idx[x_black_idx.length - 1],\n          ...x_black_idx.slice(0, -1),\n        ];\n      }\n    }\n\n    for (let idx of x_black_idx) y[idx] = true;\n\n    setFirstArr(x);\n    setSecondArr(y);\n    setMakeArr(false);\n  }\n\n  React.useEffect(() => {\n    if (displayResult) {\n      return;\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    let tl = gsap.timeline();\n\n    tl.set(\".cross-wrapper\", {\n      opacity: 1,\n    })\n      .set(\n        \".cross-wrapper\",\n        {\n          opacity: 0,\n        },\n        `+=${CROSS_DISPLAY_TIME}`\n      )\n      .set(\".grid-wrapper-first\", {\n        opacity: 1,\n      })\n      .set(\n        \".grid-wrapper-first\",\n        {\n          opacity: 0,\n        },\n        `+=${GRID_DISPLAY_TIME2}`\n      )\n      .set(\n        \".grid-wrapper-second\",\n        {\n          opacity: 1,\n        },\n        `+=${GRID_DELAY_TIME2}`\n      )\n      .set(\n        \".grid-wrapper-second\",\n        {\n          opacity: 0,\n        },\n        `+=${GRID_DISPLAY_TIME2}`\n      )\n      .set(\".button-wrapper\", {\n        opacity: 1,\n      });\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [displayResult]);\n\n  return displayResult ? (\n    <TestOneResult\n      firstArr={firstArr}\n      secondArr={secondArr}\n      userReply={userReply}\n      setDisplayResult={setDisplayResult}\n      setMakeArr={setMakeArr}\n    />\n  ) : (\n    <div>\n      <div className=\"cross-wrapper\">\n        <div className=\"cross\"> </div>\n      </div>\n\n      <TestOneGrid firstArr={firstArr} secondArr={secondArr} />\n\n      <div className=\"button-wrapper\">\n        <button\n          className=\"button button-yes\"\n          onClick={() => {\n            setUserReply(true);\n            setDisplayResult(true);\n          }}\n          ref={yesButtonRef}\n        >\n          YES\n          <br />←\n        </button>\n        <button\n          className=\"button button-no\"\n          onClick={() => {\n            setUserReply(false);\n            setDisplayResult(true);\n          }}\n          ref={noButtonRef}\n        >\n          NO\n          <br />→\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TestOneDisplay;\n","import { React, useEffect, useState } from \"react\";\nimport \"../scss/TestTwoKeyMap.scss\";\n\nconst TestTwoKeyMap = ({ arr }) => {\n  let convertedArr = [];\n\n  console.log(arr);\n  for (let i = 0; i < 5; i++) {\n    let name = \"img-wrapper\" + (i == 4 ? \"\" : \" right\");\n    convertedArr.push(\n      <div className={name}>\n        <img src={`./img/${arr[2 * i]}.png`} className=\"img-map\" />\n        <img src={`./img/${arr[2 * i + 1]}.png`} className=\"img-map\" />\n        <p className=\"text-number\">{2 * i + 1}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"key-wrapper\">\n      <div className=\"key\">{convertedArr}</div>\n    </div>\n  );\n};\n\nexport default TestTwoKeyMap;\n","import { React, useEffect, useState } from \"react\";\nimport \"../scss/TestTwoKeyQuery.scss\";\n\nconst TestTwoKeyQuery = ({ imgArr = [], ansArr = [], inputArr = [] }) => {\n  let convertedArr = [];\n  let init_flag = true;\n\n  for (let i = 0; i < 20; i++) {\n    let color = \"\";\n    if (inputArr[i] == -1) {\n      color = init_flag ? \"black\" : \"gray\";\n      init_flag = false;\n    } else {\n      color = ansArr[i] == inputArr[i] ? \"green\" : \"red\";\n    }\n\n    convertedArr.push(\n      <div className={color + \" img-query\"}>\n        <img src={`./img/${imgArr[i]}.png`} className=\"img-key-query\" />\n      </div>\n    );\n  }\n  return <div className=\"query-container\">{convertedArr}</div>;\n};\n\nexport default TestTwoKeyQuery;\n","import { React, useEffect, useState } from \"react\";\nimport TestTwoKeyMap from \"./TestTwoKeyMap\";\nimport TestTwoKeyQuery from \"./TestTwoKeyQuery\";\nimport shuffle from \"../util/shuffle\";\nimport randInt from \"../util/randInt\";\n\nconst TestTwoDisplay = () => {\n  let [mapArr, setMapArr] = useState([]);\n  let [imgArr, setImgArr] = useState([]);\n  let [inputArr, setInputArr] = useState([]);\n  let [ansArr, setAnsArr] = useState([]);\n  let [convArr, setConvArr] = useState(new Array(10));\n  let [inputIdx, setInputIdx] = useState(-1);\n  let [flag, setFlag] = useState(true);\n\n  const handleKeyDown = (event) => {\n    console.log(\"A key was pressed\", event.keyCode);\n\n    let copyInputArr = inputArr.slice();\n    copyInputArr[inputIdx] = event.keyCode - 48;\n    setInputArr(copyInputArr);\n    if (inputIdx === 20) {\n      setFlag(true);\n      setInputIdx(-1);\n    } else {\n      setInputIdx(inputIdx + 1);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    if (flag) {\n      setFlag(false);\n\n      let mapArrTemp = [],\n        imgArrTemp = [],\n        ansArrTemp = [],\n        inputArrTemp = [];\n      for (let i = 0; i < 10; i++) {\n        mapArrTemp.push(i);\n      }\n\n      shuffle(mapArrTemp);\n\n      let convArrTemp = new Array(10);\n      for (let i = 0; i < 5; i++) {\n        let key = i * 2 + 1;\n        convArrTemp[mapArrTemp[2 * i]] = key;\n        convArrTemp[mapArrTemp[2 * i + 1]] = key;\n      }\n\n      for (let i = 0; i < 20; i++) {\n        imgArrTemp.push(randInt(0, 9));\n        ansArrTemp.push(convArrTemp[imgArrTemp[i]]);\n        inputArrTemp.push(-1);\n      }\n\n      // console.log(\"init?:\", init_flag);\n      setMapArr(mapArrTemp);\n      setImgArr(imgArrTemp);\n      setConvArr(convArrTemp);\n      setAnsArr(ansArrTemp);\n      setInputArr(inputArrTemp);\n      setInputIdx(0);\n    }\n\n    // cleanup this component\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [inputIdx]);\n\n  // mapArr -> 02468\n  //           13579 순서로 각각 무슨 이미지인지 저장\n  // imgArr -> 쿼리 (이미지로 저장)\n  // convArr -> 그림 번호를 주면 키보드숫자로 바꿔주는 arr\n  // 사용자가 누른 키\n\n  console.log(\"render\", ansArr, inputArr);\n  return (\n    <div className=\"container\">\n      <TestTwoKeyMap arr={mapArr} />\n      <TestTwoKeyQuery imgArr={imgArr} ansArr={ansArr} inputArr={inputArr} />\n    </div>\n  );\n};\n\nexport default TestTwoDisplay;\n","export default function shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n","import { Route } from \"react-router-dom\";\nimport MainPage from \"./component/MainPage\";\n\nimport TestOneDisplay from \"./component/TestOneDisplay\";\nimport TestOneDisplay2 from \"./component/TestOneDisplay2\";\nimport TestOneDisplay3 from \"./component/TestOneDisplay3\";\nimport TestOneDisplay4 from \"./component/TestOneDisplay4\";\nimport TestTwoDisplay from \"./component/TestTwoDisplay\";\n\nfunction App() {\n  return (\n    <div>\n      <Route exact path=\"/\" component={MainPage} />\n      <Route path=\"/TestOneDisplay1\" component={TestOneDisplay} />\n      <Route path=\"/TestOneDisplay2\" component={TestOneDisplay2} />\n      <Route path=\"/TestOneDisplay3\" component={TestOneDisplay3} />\n      <Route path=\"/TestOneDisplay4\" component={TestOneDisplay4} />\n      <Route path=\"/TestTwoDisplay\" component={TestTwoDisplay} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./scss/index.scss\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}